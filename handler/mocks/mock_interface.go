// Code generated by MockGen. DO NOT EDIT.
// Source: handler/handler.go

// Package mocks is a generated GoMock package.
package mocks

import (
	database "appointments_scheduler/database"
	domain "appointments_scheduler/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockdbInterface is a mock of dbInterface interface.
type MockdbInterface struct {
	ctrl     *gomock.Controller
	recorder *MockdbInterfaceMockRecorder
}

// MockdbInterfaceMockRecorder is the mock recorder for MockdbInterface.
type MockdbInterfaceMockRecorder struct {
	mock *MockdbInterface
}

// NewMockdbInterface creates a new mock instance.
func NewMockdbInterface(ctrl *gomock.Controller) *MockdbInterface {
	mock := &MockdbInterface{ctrl: ctrl}
	mock.recorder = &MockdbInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockdbInterface) EXPECT() *MockdbInterfaceMockRecorder {
	return m.recorder
}

// DeleteAppointmentById mocks base method.
func (m *MockdbInterface) DeleteAppointmentById(arg0 int, arg1 *database.Database) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAppointmentById", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAppointmentById indicates an expected call of DeleteAppointmentById.
func (mr *MockdbInterfaceMockRecorder) DeleteAppointmentById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAppointmentById", reflect.TypeOf((*MockdbInterface)(nil).DeleteAppointmentById), arg0, arg1)
}

// GetConfirmedAppointments mocks base method.
func (m *MockdbInterface) GetConfirmedAppointments(arg0 string, arg1 *database.Database) ([]domain.Appointment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfirmedAppointments", arg0, arg1)
	ret0, _ := ret[0].([]domain.Appointment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfirmedAppointments indicates an expected call of GetConfirmedAppointments.
func (mr *MockdbInterfaceMockRecorder) GetConfirmedAppointments(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfirmedAppointments", reflect.TypeOf((*MockdbInterface)(nil).GetConfirmedAppointments), arg0, arg1)
}

// ValidateAppointment mocks base method.
func (m *MockdbInterface) ValidateAppointment(arg0 domain.Appointment, arg1 *database.Database) (*domain.Appointment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAppointment", arg0, arg1)
	ret0, _ := ret[0].(*domain.Appointment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateAppointment indicates an expected call of ValidateAppointment.
func (mr *MockdbInterfaceMockRecorder) ValidateAppointment(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAppointment", reflect.TypeOf((*MockdbInterface)(nil).ValidateAppointment), arg0, arg1)
}
